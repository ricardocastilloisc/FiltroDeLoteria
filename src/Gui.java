import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

/**
 *
 * @author rey
 */
public class Gui extends javax.swing.JFrame {
	DefaultTableModel modelo;

	/**
	 * Creates new form Gui
	 */
	public Gui() {
		initComponents();
		//crea la tabla y a la vez no puede editarlo
		modelo = new DefaultTableModel()  
		  {
		    @Override
		    public boolean isCellEditable (int fila, int columna) {
		        return false;
		    }
		};
		tabla.setModel(modelo);
		modelo.addColumn("Número");
		modelo.addColumn("Primero");
		modelo.addColumn("Segundo");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jTextFieldNumero = new javax.swing.JTextField();
		
		
		jTextFieldNumero.addKeyListener(new java.awt.event.KeyListener()
		{
			public void keyPressed(KeyEvent ke) {
				if (ke.getKeyCode() == KeyEvent.VK_ENTER) 
				{		
					jTextFieldPrimero.grabFocus();
				}
			}

			@Override
			public void keyReleased(KeyEvent arg0) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void keyTyped(KeyEvent arg0) {
				// TODO Auto-generated method stub
				
			}
		});
		
		
		jLabel2 = new javax.swing.JLabel();
		jTextFieldPrimero = new javax.swing.JTextField();
		
		jTextFieldPrimero.addKeyListener(new java.awt.event.KeyListener()
		{
			public void keyPressed(KeyEvent ke) {
				if (ke.getKeyCode() == KeyEvent.VK_ENTER) 
				{		
					jTextFieldSegundo.grabFocus();
				}
			}

			@Override
			public void keyReleased(KeyEvent arg0) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void keyTyped(KeyEvent arg0) {
				// TODO Auto-generated method stub
				
			}
		});
		jLabel3 = new javax.swing.JLabel();
		jTextFieldSegundo = new javax.swing.JTextField();
		
		jTextFieldSegundo.addKeyListener(new java.awt.event.KeyListener()
		{
			public void keyPressed(KeyEvent ke) {
				if (ke.getKeyCode() == KeyEvent.VK_ENTER) 
				{		
					jButtonGuardar.grabFocus();
				}
			}

			@Override
			public void keyReleased(KeyEvent arg0) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void keyTyped(KeyEvent arg0) {
				// TODO Auto-generated method stub
				
			}
		});

		jPanel2 = new javax.swing.JPanel();
		jButtonGuardar = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		tabla = new javax.swing.JTable();
		jButton1 = new javax.swing.JButton();
		jButtoExcel = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Formulario"));
		jPanel1.setLayout(new java.awt.GridLayout(9, 0));

		jLabel1.setText("Numero");
		jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		jPanel1.add(jLabel1);
		jPanel1.add(jTextFieldNumero);

		jLabel2.setText("Primer");
		jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		jPanel1.add(jLabel2);
		jPanel1.add(jTextFieldPrimero);

		jLabel3.setText("Segundo");
		jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		jPanel1.add(jLabel3);
		jPanel1.add(jTextFieldSegundo);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 124, Short.MAX_VALUE));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 31, Short.MAX_VALUE));

		jPanel1.add(jPanel2);

		jButtonGuardar.setText("Guardar");
		jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonGuardarActionPerformed(evt);
			}
		});

		jButtonGuardar.addKeyListener(new java.awt.event.KeyListener()
		{
			public void keyPressed(KeyEvent ke) {
				if (ke.getKeyCode() == KeyEvent.VK_ENTER) 
				{		
					if (jTextFieldNumero.getText().length() < 3) {
					JOptionPane.showMessageDialog(null, "¡El número debe de ser de 3 digitos!");
				} else {
					if (jTextFieldNumero.getText().length() > 3) {
						JOptionPane.showMessageDialog(null, "¡El número no debe de ser mayor de 3 digitos!");
					} else {
						Object[] object = new Object[3];
						object[0] = jTextFieldNumero.getText();
						if(jTextFieldPrimero.getText().equals(""))
						{
							object[1] = "0";
						}else 
						{
							object[1] = jTextFieldPrimero.getText();
						}
						if(jTextFieldSegundo.getText().equals("")) 
						{
							object[2] = "0";
						}else 
						{
							object[2] = jTextFieldSegundo.getText();
							
						}
						modelo.addRow(object);
						registros++;
						limpiar();
					}

				}
				}
			}

			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void keyTyped(KeyEvent e) {
				// TODO Auto-generated method stub
				
			} // end keyPressed()
		}); // convert Enter to an ActionEvent
		jPanel1.add(jButtonGuardar);

		tabla.setModel(
				new javax.swing.table.DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
		jScrollPane1.setViewportView(tabla);

		jButton1.setText("Eliminar");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});
		
		jButtoExcel.setText("Excel");
		jButtoExcel.addActionListener(
				new java.awt.event.ActionListener() 
				{
					@Override
					public void actionPerformed(ActionEvent arg0) {
						// TODO Auto-generated method stub
						try {
							CrearExcel () ;
						} catch (IOException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}	
				}
				);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButtoExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 112,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jButton1).addComponent(jButtoExcel)))
				.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents
	
	public void CrearExcel () throws IOException 
	{
		//ver los registros que estan
		//System.out.println(modelo.getValueAt(0, 0));
		
		matriz = new int [registros][3];
		
		String Columna1 = "";
		String Columna2 = "";
		String Columna3 = "";
		
		
		String numCadena = "1";

		int numEntero = Integer.parseInt(numCadena);
		
		for(int fila = 0; fila<registros; fila++) 
		{
			Columna1 = (String)modelo.getValueAt(fila, 0);
			Columna2 = (String)modelo.getValueAt(fila, 1);
			Columna3 = (String)modelo.getValueAt(fila, 2);
			matriz[fila] [0] = Integer.parseInt(Columna1);
			matriz[fila] [1] = Integer.parseInt(Columna2);
			matriz[fila] [2] = Integer.parseInt(Columna3);
			
		}
		
		fila = registros;
		
		int matriz2[][] = new int[fila][3];

		int numeroDeDatosMatriz = 0;

		for (int filas = 0; filas < fila; filas++) {
			int validar = 0;

			for (int recorrido = 0; recorrido < numeroDeDatosMatriz; recorrido++) {
				if (validar == 1) {
					// System.out.println("si encontro");
					// break;
				}

				// System.out.print(matriz[filas][0]+"|");
				// System.out.println(matriz2[recorrido][0]+"|");

				if (matriz[filas][0] == matriz2[recorrido][0]) {
					matriz2[recorrido][1] = matriz2[recorrido][1] + matriz[filas][1];
					matriz2[recorrido][2] = matriz2[recorrido][2] + matriz[filas][2];
					validar = 1;
				}
			}

			if (validar == 0) {
				matriz2[numeroDeDatosMatriz][0] = matriz[filas][0];
				matriz2[numeroDeDatosMatriz][1] = matriz[filas][1];
				matriz2[numeroDeDatosMatriz][2] = matriz[filas][2];
				numeroDeDatosMatriz++;

			}

			if (validar == 1) {
				validar = 0;
			}

		}
		// impresion del contro general
		/*
		 * 
		 * for (int filas = 0; filas <fila; filas++) { for (int columna = 0; columna <
		 * 4; columna++) { if(columna<3) {
		 * 
		 * System.out.print(matriz2[filas][columna]+"|"); }else {
		 * System.out.println(""); }
		 * 
		 * } }
		 */
		//////////// Pedir numero
		
		int numero = Integer.parseInt( JOptionPane.showInputDialog(
			        null,"¿Qué numeros con importe arriba de ?",
			        "Petición ",
			        JOptionPane.QUESTION_MESSAGE) );
		
		
		////////
		int matrizresultados[][] = new int[fila][2];

		// filtro primer lugar

		int numeroDeresultadosPrimerLugar = 0;

		for (int filas = 0; filas < fila; filas++) {
			if (matriz2[filas][1] > numero) {
				matrizresultados[numeroDeresultadosPrimerLugar][0] = matriz2[filas][0];
				matrizresultados[numeroDeresultadosPrimerLugar][1] = matriz2[filas][1];
				numeroDeresultadosPrimerLugar++;
			}
		}

		for (int filas = 0; filas < numeroDeresultadosPrimerLugar; filas++) {
			// System.out.print(matrizresultados[filas][0]+"|");
			// System.out.println(matrizresultados[filas][1]);
		}

		//

		////////

		// System.out.println("///////////////////////////////////////////////");
		int matrizresultadosSegundo[][] = new int[fila][2];

		// filtro primer lugar

		int numeroDeresultadosSegundoLugar = 0;

		for (int filas = 0; filas < fila; filas++) {
			if (matriz2[filas][2] > numero) {
				matrizresultadosSegundo[numeroDeresultadosSegundoLugar][0] = matriz2[filas][0];
				matrizresultadosSegundo[numeroDeresultadosSegundoLugar][1] = matriz2[filas][2];
				numeroDeresultadosSegundoLugar++;
			}
		}

		for (int filas = 0; filas < numeroDeresultadosSegundoLugar; filas++) {
			// System.out.print(matrizresultadosSegundo[filas][0]+"|");
			// System.out.println(matrizresultadosSegundo[filas][1]);
		}

		//

		String textoArchivo = "";

		int numeroDeFilasCrearExcel = 0;

		for (int lugar = 0; lugar < 2; lugar++) {
			if (lugar == 0) {
				textoArchivo = "Primeros lugares";
				numeroDeFilasCrearExcel = numeroDeresultadosPrimerLugar;
			} else {
				textoArchivo = "Segundos lugares";
				numeroDeFilasCrearExcel = numeroDeresultadosSegundoLugar;
			}

			/* La ruta donde se creará el archivo */
			String rutaArchivo = System.getProperty("user.home") + "/" + textoArchivo + ".xls";
			/* Se crea el objeto de tipo File con la ruta del archivo */
			File archivoXLS = new File(rutaArchivo);
			/* Si el archivo existe se elimina */
			if (archivoXLS.exists())
				archivoXLS.delete();
			/* Se crea el archivo */
			archivoXLS.createNewFile();

			/* Se crea el libro de excel usando el objeto de tipo Workbook */
			Workbook libro = new HSSFWorkbook();
			/* Se inicializa el flujo de datos con el archivo xls */
			FileOutputStream archivo = new FileOutputStream(archivoXLS);

			/*
			 * Utilizamos la clase Sheet para crear una nueva hoja de trabajo dentro del
			 * libro que creamos anteriormente
			 */
			Sheet hoja = libro.createSheet(textoArchivo+" arriba de " + numero);

			/* Hacemos un ciclo para inicializar los valores de 10 filas de celdas */
			for (int f = 0; f < numeroDeFilasCrearExcel + 1; f++) {
				/* La clase Row nos permitirá crear las filas */
				Row fila = hoja.createRow(f);

				/* Cada fila tendrá 5 celdas de datos */
				for (int c = 0; c < 2; c++) {
					/* Creamos la celda a partir de la fila actual */
					Cell celda = fila.createCell(c);

					/* Si la fila es la número 0, estableceremos los encabezados */
					if (f == 0) {
						if (c == 0) {
							celda.setCellValue("Numero Ganador");
						} else {
							celda.setCellValue(textoArchivo+" arriba de " + numero);
						}

					} else {

						if (lugar == 0) {
							/* Si no es la primera fila establecemos un valor */
							if(c==0)
							{
								if(matrizresultados[f - 1][c]<100) 
								{
									celda.setCellValue("0" + matrizresultados[f - 1][c]);
								}else 
								{
									celda.setCellValue("" + matrizresultados[f - 1][c]);
								}
							}else 
							{
								celda.setCellValue("" + matrizresultados[f - 1][c]);
							}
						} else {
							if(c==0) 
							{
								if(matrizresultadosSegundo[f - 1][c]<100) 
								{
									celda.setCellValue("0" + matrizresultadosSegundo[f - 1][c]);
								}else 
								{
									celda.setCellValue("" + matrizresultadosSegundo[f - 1][c]);
								}
							}else 
							{
								celda.setCellValue("" + matrizresultadosSegundo[f - 1][c]);
							}
							
						}

					}
				}
			}

			/* Escribimos en el libro */
			libro.write(archivo);
			/* Cerramos el flujo de datos */
			archivo.close();
			/* Y abrimos el archivo con la clase Desktop */
			Desktop.getDesktop().open(archivoXLS);

		}

		
		
		//System.out.println(registros);
		
		//System.out.println("hola mundo");
		
	}
	private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonGuardarActionPerformed
		if (jTextFieldNumero.getText().length() < 3) {
			JOptionPane.showMessageDialog(null, "¡El número debe de ser de 3 digitos!");
		} else {
			if (jTextFieldNumero.getText().length() > 3) {
				JOptionPane.showMessageDialog(null, "¡El número no debe de ser mayor de 3 digitos!");
			} else {
				Object[] object = new Object[3];
				object[0] = jTextFieldNumero.getText();
				if(jTextFieldPrimero.getText().equals(""))
				{
					object[1] = "0";
				}else 
				{
					object[1] = jTextFieldPrimero.getText();
				}
				if(jTextFieldSegundo.getText().equals("")) 
				{
					object[2] = "0";
				}else 
				{
					object[2] = jTextFieldSegundo.getText();
					
				}
				modelo.addRow(object);
				registros++;
				limpiar();
				
			}

		}

	}// GEN-LAST:event_jButtonGuardarActionPerformed



	// end class

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		int fila = tabla.getSelectedRow();
		if (fila != -1) {
			modelo.removeRow(fila);
			registros--;
		} else {
			JOptionPane.showMessageDialog(this, "Debe seleccionar una fila");
		}
	}// GEN-LAST:event_jButton1ActionPerformed

	private void limpiar() {
		jTextFieldNumero.setText("");
		jTextFieldPrimero.setText("");
		jTextFieldSegundo.setText("");
		jTextFieldNumero.grabFocus();
	
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Gui().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButtoExcel;
	private javax.swing.JButton jButtonGuardar;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextField jTextFieldNumero;
	private javax.swing.JTextField jTextFieldPrimero;
	private javax.swing.JTextField jTextFieldSegundo;
	private javax.swing.JTable tabla;
	public static int registros  = 0;
	static int matriz[][];
	static int fila;
	// End of variables declaration//GEN-END:variables
}
